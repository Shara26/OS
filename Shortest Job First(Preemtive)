#include <stdio.h>
int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    int pid[n], arrival[n], burst[n], rem[n], waiting[n], tat[n];
    int completed = 0, time = 0, prev = -1;

    for (int i = 0; i < n; i++) {
        pid[i] = i + 1;
        printf("Enter Arrival Time and Burst Time for P%d: ", pid[i]);
        scanf("%d %d", &arrival[i], &burst[i]);
        rem[i] = burst[i];
        waiting[i] = 0;
        tat[i] = 0;
    }
    while (completed < n) {
        int idx = -1;
        int min_rem = 1e9;    
        for (int i = 0; i < n; i++) {
            if (arrival[i] <= time && rem[i] > 0 && rem[i] < min_rem) {
                min_rem = rem[i];
                idx = i;
            }
        }
        if (idx != -1) {   
            rem[idx]--;  time++;
            if (rem[idx] == 0) {
                completed++;
                tat[idx] = time - arrival[idx];
                waiting[idx] = tat[idx] - burst[idx];
            }
        } else {
            time++;
        }
    }
    printf("\nPID\tAT\tBT\tWT\tTAT\n");
    float avgWT = 0, avgTAT = 0;
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\n", pid[i], arrival[i], burst[i], waiting[i], tat[i]);
        avgWT += waiting[i];
        avgTAT += tat[i];
    }
    printf("\nAverage Waiting Time = %.2f", avgWT / n);
    printf("\nAverage Turnaround Time = %.2f\n", avgTAT / n);
return 0;
}

OUTPUT:
Enter number of processes: 5
Enter Arrival Time and Burst Time for P1: 0 3
Enter Arrival Time and Burst Time for P2: 2 6
Enter Arrival Time and Burst Time for P3: 4 4
Enter Arrival Time and Burst Time for P4: 6 5
Enter Arrival Time and Burst Time for P5: 8 2

PID     AT      BT      WT      TAT
1       0       3       0       3
2       2       6       7       13
3       4       4       0       4
4       6       5       9       14
5       8       2       0       2

Average Waiting Time = 3.20
Average Turnaround Time = 7.20
